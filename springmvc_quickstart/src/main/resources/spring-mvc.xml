<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--配置注解扫描-->
    <context:component-scan base-package="com.controller"/>

    <!--处理器映射器-处理器适配器，进行了功能的增强，支持json的读写-->
    <mvc:annotation-driven/>

    <!--视图解析器 逻辑视图名解析为具体的物理文件地址-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--controller处理器返回的字符串拼接前后缀之后的页面地址-->
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--自定义类型转换器-->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.converter.DateConverter"/>
            </set>
        </property>
    </bean>

    <!--方式一：
        放行指定的静态资源
        mapping: 放行的映射路径
        location：静态资源所在目录-->
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/imag/**" location="/imag/"/>

    <!--方式二：放行全部静态资源-->
<!--    <mvc:default-servlet-handler/>-->

    <!--文件上传解析器-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!--文件上传最大值5MB 5*1024*1024-->
        <property name="maxUploadSize" value="5242880"/>
        <!--文件上传写入内存的最大值，如果小于这个值不会生成临时文件默认为10240-->
        <property name="maxInMemorySize" value="40960"/>
    </bean>


    <!--配置自定义异常处理器-->
    <bean id="globalExceptionResolver" class="com.exception.GlobalExceptionResolver"/>

    <!--配置拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/> <!--对所有controller类里面的所有方法进行拦截-->
            <bean class="com.interceptor.MyInterceptor1"/>
        </mvc:interceptor>

        <mvc:interceptor>
            <mvc:mapping path="/**"/> <!--对所有controller类里面的所有方法进行拦截-->
            <bean class="com.interceptor.MyInterceptor2"/>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>